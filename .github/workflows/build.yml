name: build-pipeline

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        description: 'Docker Username'
        required: true
      DOCKER_PASSWORD:
        description: 'Docker Password'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print Docker credentials
        run: |
            echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
            echo "Docker Password: ${{ secrets.DOCKER_PASSWORD }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username:  ${{ secrets.DOCKER_USERNAME }}
          password:  ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
          cache-dependency-path: |
            **/gradle-wrapper.properties
            **/*.gradle

      - name: Prepare environment
        run: |
          export GRADLE_USER_HOME=$(pwd)/.gradle
          chmod +x gradlew
          ./gradlew --version
          BUILD_VERSION=$(./gradlew printVersion --quiet)
          PHASE=$(if [[ "${{ github.ref_name }}" == "develop" ]] || [[ "${{ github.ref_name }}" =~ ^hotfix/.* ]]; then echo "-SNAPSHOT"; else echo ""; fi)
          echo "version=$BUILD_VERSION$PHASE" >> $GITHUB_ENV

      - name: Build project
        run: ./gradlew assemble --no-daemon

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: java-build-artifacts
          path: |
            build/libs/*.jar
          retention-days: 1

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            .gradle/wrapper
            .gradle/caches
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-${{ runner.os }}-
