name: deploy-pipeline

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        description: 'Docker Username'
        required: true
      DOCKER_PASSWORD:
        description: 'Docker Password'
        required: true
      PORTAINER_HOST:
        required: true
      PORTAINER_USERNAME:
        required: true
      PORTAINER_PASSWORD:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get project version
        run: |
          version=$(./gradlew printVersion | grep -oP '\d+\.\d+\.\d+')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: java-build-artifacts
          path: ./

      - name: List build directory contents
        run: ls -R ./

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        run: |
          docker build --platform linux/amd64,linux/arm64 --build-arg VERSION=${{ env.VERSION }} --cache-from=mferrerovilas/api-password:latest -t mferrerovilas/api-password:${{ env.VERSION }} .
          docker tag mferrerovilas/api-password:${{ env.VERSION }} mferrerovilas/api-password:latest
          docker push mferrerovilas/api-password:${{ env.VERSION }}

      - name: Deploy stack to Portainer
        uses: carlrygart/portainer-stack-deploy@v1
        with:
          portainer-host: ${{ secrets.PORTAINER_HOST }}
          username: ${{ secrets.PORTAINER_USERNAME }}
          password: ${{ secrets.PORTAINER_PASSWORD }}
          stack-name: 'api-password'
          stack-definition: 'stack-definition.yml'
          image: mferrerovilas/api-password:${{ env.VERSION }}
          prune-stack: false
          pull-image: true
