plugins {
	id 'org.springframework.boot' version '3.3.4'
	id "io.spring.dependency-management" version "1.1.4"
	id "io.freefair.lombok" version "8.10"
	id 'org.liquibase.gradle' version "2.2.2"
	id 'java'
	id 'groovy'
	id 'checkstyle'
}

group = 'passwordService'
version = '1.0.0'

java {
	sourceCompatibility = '21'
}

checkstyle {
	configFile = file("$rootDir/checkstyle/checkstyle.xml")
	toolVersion = '10.12.2'
}

copy {
	from 'hooks/pre-commit','hooks/pre-push'
	into '.git/hooks'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'


	//Health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'

	// logs
	implementation 'org.apache.commons:commons-text:1.11.0'

	// http clients
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-okhttp'
	implementation 'io.github.openfeign.form:feign-form:3.8.0'
	implementation 'io.github.openfeign:feign-hc5:13.3'
	implementation 'io.github.openfeign.form:feign-form-spring:3.8.0'

	//Mapper
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'


	//JWT OAUTH2
	//implementation 'com.auth0:java-jwt:4.4.0'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'com.auth0:jwks-rsa:0.22.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.4.1'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server:6.4.2'

	//DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	liquibaseRuntime 'org.liquibase:liquibase-core'
	liquibaseRuntime 'mysql:mysql-connector-java:8.0.32'
	liquibaseRuntime 'info.picocli:picocli:4.7.1'
	testImplementation 'org.liquibase:liquibase-core'


	//Lombok
	implementation 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	testImplementation 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

	//Testing
	testImplementation 'org.mock-server:mockserver-junit-jupiter:5.15.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.apache.groovy:groovy:4.0.22'
	testImplementation 'org.apache.groovy:groovy-json:4.0.22'
	testImplementation 'org.apache.groovy:groovy-xml:4.0.22'
	testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.4-M4-groovy-4.0'

	testImplementation('com.athaydes:spock-reports:2.5.1-groovy-4.0') {
		transitive = false
	}
	testImplementation('org.testcontainers:mysql')

}

bootJar {
	archiveFileName = 'app.jar'
}

springBoot {
	buildInfo()
}

test {
	useJUnitPlatform()
	systemProperty "file.encoding", "utf-8"
	maxParallelForks = Runtime.runtime.availableProcessors()
}

dependencyManagement {
	imports {
		// Feign related
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.2"
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:24.0.4"
	}
}

tasks.register('printVersion') {
	doLast {
		print project.version
	}
}

tasks.withType(Test).configureEach {
	reports.html.required = false
	reports.junitXml.required = false
}

liquibase {
	def dbName = System.properties['dbName'] ?: 'passwords'
	activities {
		main {
			changeLogFile 'build.migrations/db/changelog.xml'
			url "jdbc:mysql://192.168.1.100:3306/$dbName"
			username 'root'
			password 'vilaswifi'
		}
	}
}
